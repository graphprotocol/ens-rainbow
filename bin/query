#! /bin/bash

# Query a list of domain ids for ENS and for each of these id's, query
# the subdomains

# Staging with rainbow data
ens_url="https://api.staging.thegraph.com/subgraphs/name/fordn/ens_names"
# Prod without rainbow data
#ens_url="https://api.thegraph.com/subgraphs/name/ensdomains/ens"
# How many ids to process and where to start in the list of domains
first=100
skip=$(( $RANDOM * 7 ))

tmp=$(mktemp /tmp/ensXXXXXX.json)
function cleanup() {
    rm -f $tmp
}
trap cleanup EXIT

echo "skip: $skip"

list="{ \"query\": \"query{ domains(first: $first, skip: $skip) { id } }\"}"
subdomains=$(echo 'query getSubdomains($id: ID!) {
    domain(id: $id) {
      id
      labelName
      subdomains {
        id
        labelName
      }
    }
  }' | tr '\n' ' ')

ids=$(curl -s -X POST -d "$list" "$ens_url" | jq -r '.data.domains | .[].id')

total=0
for id in $ids
do
    echo "id: $id"
    q=$(printf "{ \"query\": \"%s\", \"variables\": { \"id\": \"%s\" } }" "$subdomains" "$id")
    t=$(curl -s -o "$tmp" -w '%{time_total}\n' -X POST -d "$q" "$ens_url")
    echo "time: $t"
    total=$(echo "$total + $t" | bc -l)
    echo -n "subdomains: "
    jq '.data.domain.subdomains | length' < "$tmp" || (echo "error in response:"; cat "$tmp")
    echo
done

echo "total: $total"
